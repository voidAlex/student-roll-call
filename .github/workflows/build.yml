name: Build Tauri App for Multiple Platforms

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin --bundles app'
            target: 'aarch64-apple-darwin'
            name: 'macOS Apple Silicon'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin --bundles app'
            target: 'x86_64-apple-darwin'
            name: 'macOS Intel'

          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            target: 'x86_64-pc-windows-msvc'
            name: 'Windows'

    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4



    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: |
        # 确保有足够的磁盘空间
        df -h
        # 创建临时签名证书来避免应用损毁问题
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'

    - name: Install frontend dependencies
      run: npm ci



    - name: Build Tauri app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # 移除以下两行
        # TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        # TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      with:
        tagName: ${{ github.ref_name }}
        releaseName: 'Student Roll Call v__VERSION__'
        releaseBody: 'See the assets to download this version and install.'
        releaseDraft: true
        prerelease: false
        args: ${{ matrix.args }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}-artifacts
        path: |
          src-tauri/target/release/bundle/
          src-tauri/target/*/release/bundle/
          !src-tauri/target/release/bundle/**/deps/
        retention-days: 30